name: ci

on:
  push:
    branches: [ master, "upgrade-unrar-dll-version-ci-test" ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - name: Windows x86_64
            os: windows-2022
          # MacOS
          # - name: MacOS 15 x86_64
          #   os: macos-15
          - name: MacOS 14 x86_64
            os: macos-14
          - name: MacOS 13 x86_64
            os: macos-13
          - name: MacOS 12 x86_64
            os: macos-12
          # Linux
          - name: Linux x86_64
            os: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: MacOS 14 workaround
      if: matrix.name == 'MacOS 14 x86_64'
      # ls -lh /Applications/Xcode_15.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/
      run: |
        clang --version && xcode-select -p 
        ls -l /Library/Developer/CommandLineTools/SDKs/
        ls -l /Applications/
        sudo rm -rf /Applications/MacOSX13*
        sudo rm -rf /Library/Developer/CommandLineTools/SDKs/MacOSX13*
        sudo rm -rf /Library/Developer/CommandLineTools
        brew install findutils
        cd /
        $(brew --prefix)/opt/findutils/libexec/gnubin/find /Library -type f -name "stddef.h" -exec ls -lh {} \;
        $(brew --prefix)/opt/findutils/libexec/gnubin/find /Applications/ -type f -name "stddef.h" -exec ls -lh {} \;
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Test unrar_sys library
      run: cargo test --verbose --package=unrar_sys
